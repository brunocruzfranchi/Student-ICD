n_aux <- names(which(reg.summary$which[cp_min,]))
for (i in 1:length(n_aux)) {
aux <- n_aux[i]
for (j in 1:42) {
#if(aux == colnames(matrix_var)[j])
if(aux == variables_nombres[j])
matrix_var[j] = matrix_var[j] + 1
}
}
}
df <- data.frame(nombres = variables_nombres,
valores = t(matrix_var))
View(df)
df <- data.frame(nombres = variables_nombres,
valores = matrix_var)
View(df)
# Plot
ggplot(data = df) + geom_bar(aes(x=nombres, y=valores)) +
ylab("Frecuencia") + xlab("") +
theme_minimal() +
theme(legend.position="none")
# Plot
ggplot(data = df, mapping = aes(x = nombres, y = valores, fill = nombres)) +
geom_bar(stat = "identity")
matrix_var
variables_nombres[j]
aux
matrix_var <- matrix(0, nrow = 1, ncol = 42)
variables_nombres <- c("(Intercept)","schoolMS","sexM","age","addressU","famsizeLE3", "PstatusT","Medu",
"Fedu","Mjobhealth","Mjobother","Mjobservices","Mjobteacher","Fjobhealth", "Fjobother","Fjobservices",
"Fjobteacher", "reasonhome", "reasonother", "reasonreputation", "guardianmother","guardianother",
"traveltime", "studytime", "failures","schoolsupyes",  "famsupyes",  "paidyes"
,"activitiesyes","nurseryyes", "higheryes", "internetyes", "romanticyes", "famrel",
"freetime","goout", "Dalc", "Walc", "health","absences","G1","G2")
colnames(matrix_var) <- variables_nombres
matrix_var <- matrix(0, nrow = 1, ncol = 42)
variables_nombres <- c("(Intercept)","schoolMS","sexM","age","addressU","famsizeLE3", "PstatusT","Medu",
"Fedu","Mjobhealth","Mjobother","Mjobservices","Mjobteacher","Fjobhealth", "Fjobother","Fjobservices",
"Fjobteacher", "reasonhome", "reasonother", "reasonreputation", "guardianmother","guardianother",
"traveltime", "studytime", "failures","schoolsupyes",  "famsupyes",  "paidyes"
,"activitiesyes","nurseryyes", "higheryes", "internetyes", "romanticyes", "famrel",
"freetime","goout", "Dalc", "Walc", "health","absences","G1","G2")
matrix_var <- rep(0L, 42)
matrix_var <- rep(0L, 42)
variables_nombres <- c("(Intercept)","schoolMS","sexM","age","addressU","famsizeLE3", "PstatusT","Medu",
"Fedu","Mjobhealth","Mjobother","Mjobservices","Mjobteacher","Fjobhealth", "Fjobother","Fjobservices",
"Fjobteacher", "reasonhome", "reasonother", "reasonreputation", "guardianmother","guardianother",
"traveltime", "studytime", "failures","schoolsupyes",  "famsupyes",  "paidyes"
,"activitiesyes","nurseryyes", "higheryes", "internetyes", "romanticyes", "famrel",
"freetime","goout", "Dalc", "Walc", "health","absences","G1","G2")
for (k in 1:400) {
set.seed(k)
sample = sample.split(Math, SplitRatio = 0.80)
Math.train = subset(Math, sample == TRUE)
Math.forw<-regsubsets(G3~., nbest=1, nvmax=41,
force.in=NULL, force.out=NULL, intercept=TRUE,
method=c("forward"), data = Math.train)
reg.summary = summary(Math.forw)
cp_min = which.min(reg.summary$cp)
n_aux <- c()
n_aux <- names(which(reg.summary$which[cp_min,]))
for (i in 1:length(n_aux)) {
aux <- n_aux[i]
for (j in 1:42) {
#if(aux == colnames(matrix_var)[j])
if(aux == variables_nombres[j])
matrix_var[j] = matrix_var[j] + 1
}
}
}
df <- data.frame(nombres = variables_nombres,
valores = matrix_var)
# Plot
ggplot(data = df, mapping = aes(x = nombres, y = valores, fill = nombres)) +
geom_bar(stat = "identity")
View(df)
max(400)*0.4
max(400)*0.6
View(df)
max(400)*0.5
max(400)*0.25
max(400)*0.45
umbral <- max(matrix_var)*0.45
matrix_var>umbral
umbral <- max(matrix_var)*0.45
df <- data.frame(nombres = variables_nombres[matrix_var>umbral],
valores = matrix_var[matrix_var>umbral])
# Plot
ggplot(data = df, mapping = aes(x = nombres, y = valores, fill = nombres)) +
geom_bar(stat = "identity")
umbral <- max(matrix_var)*0.40
df <- data.frame(nombres = variables_nombres[matrix_var>umbral],
valores = matrix_var[matrix_var>umbral])
# Plot
ggplot(data = df, mapping = aes(x = nombres, y = valores, fill = nombres)) +
geom_bar(stat = "identity")
df <- data.frame(Variable = variables_nombres[matrix_var>umbral],
Frecuencia = matrix_var[matrix_var>umbral])
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Frecuencia)) +
geom_bar(stat = "identity")
df <- data.frame(Variable = variables_nombres[matrix_var>umbral],
Frecuencia = matrix_var[matrix_var>umbral])
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Frecuencia)) +
geom_bar(stat = "identity")
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")
Math.lineal <- lm(G3~school+age+Fjob+activities+famrel+reason+ schoolsup +
G1+G2+absences+romantic+Walc,data=Math.train)
?scale_fill_brewer
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
scale_fill_brewer(palette = "Set2")
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
scale_fill_brewer(palette = "Set2")+
theme_light()+
theme_minimal()
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme_minimal()
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
scale_fill_brewer(palette = "Accent")+
theme_light()+
theme_minimal()
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
scale_fill_brewer(palette = "BrBG")+
theme_light()+
theme_minimal()
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
scale_fill_brewer(palette = "Set3")+
theme_light()+
theme_minimal()
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
scale_fill_brewer(palette = "Pastel2")+
theme_light()+
theme_minimal()
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
scale_fill_brewer(palette = "Dark2")+
theme_light()+
theme_minimal()
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
scale_fill_brewer(palette = "Purples")+
theme_light()+
theme_minimal()
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
scale_fill_brewer(palette = "Paired")+
theme_light()+
theme_minimal()
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
scale_fill_brewer(palette = "Pastel1")+
theme_light()+
theme_minimal()
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme_minimal()
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar()+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme_minimal()
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme_minimal()
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
geom_text(aes(label = Frecuencia), position = position_stack(vjust= 0.5),
colour = "black", size = 5)+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme_minimal()
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
geom_text(aes(label = Frecuencia), position = position_stack(vjust= 0.5),
colour = "Grey", size = 5)+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme_minimal()
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
geom_text(aes(label = Frecuencia), position = position_stack(vjust= 0.5),
colour = "black", size = 2)+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme_minimal()
# Plot
ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
geom_text(aes(label = Frecuencia), position = position_stack(vjust= 0.5),
colour = "black", size = 3)+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme_minimal()
# Plot
g1 <- ggplot(data = df, mapping = aes(x = Variable, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
geom_text(aes(label = Frecuencia), position = position_stack(vjust= 0.5),
colour = "black", size = 3)+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme_minimal()
mynamestheme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (15)),
legend.title = element_text(colour = "gray28",  face = "bold.italic", family = "Helvetica"),
legend.text = element_text(face = "italic", colour="gray28",family = "Helvetica"),
axis.title = element_text(family = "Helvetica", size = (11), colour = "steelblue4"),
axis.text = element_text(family = "Courier", colour = "cornflowerblue", size = (11)),
plot.tag = element_text(family = "Helvetica", face = "bold", size = (11)),
#legend.position = c(.95, .95),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
#legend.margin = margin(6, 6, 6, 6)
)
print(g1 + mynamestheme + labs( title= "Frecuencia de las Variables", y="Frecuencia",
x = "Variables"))
df <- data.frame(Variables = variables_nombres[matrix_var>umbral],
Frecuencia = matrix_var[matrix_var>umbral])
# Plot
g1 <- ggplot(data = df, mapping = aes(x = Variables, y = Frecuencia, fill = Variable)) +
geom_bar(stat = "identity")+
geom_text(aes(label = Frecuencia), position = position_stack(vjust= 0.5),
colour = "black", size = 3)+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme_minimal()
print(g1 + mynamestheme + labs( title= "Frecuencia de las Variables", y="Frecuencia",
x = "Variables"))
# Plot
g1 <- ggplot(data = df, mapping = aes(x = Variables, y = Frecuencia, fill = Variables)) +
geom_bar(stat = "identity")+
geom_text(aes(label = Frecuencia), position = position_stack(vjust= 0.5),
colour = "black", size = 3)+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme_minimal()
print(g1 + mynamestheme + labs( title= "Frecuencia de las Variables", y="Frecuencia",
x = "Variables"))
sample = sample.split(Por,SplitRatio = 0.80)
Por.train = subset(Por,sample == TRUE)
sample = sample.split(Por,SplitRatio = 0.80)
Por.train = subset(Por,sample == TRUE)
Por.forw<-regsubsets(G3~., nbest=1, nvmax=40,
force.in=NULL, force.out=NULL, intercept=TRUE,
method=c("forward"), data = Por.train)
reg.summary = summary(Por.forw)
print(g1 + mynamestheme + labs( title= "Frecuencia de las Variables", y="Frecuencia",
x = "Variables"))
names(reg.summary$which[41,])
Por.forw<-regsubsets(G3~., nbest=1, nvmax=40,
force.in=NULL, force.out=NULL, intercept=TRUE,
method=c("forward"), data = Por.train)
reg.summary = summary(Por.forw)
summary(Por.forw)
matrix_var <- matrix(0, nrow = 1, ncol = 40)
colnames(matrix_var) <- names(reg.summary$which[41,])
matrix_var <- matrix(0, nrow = 1, ncol = 41)
colnames(matrix_var) <- names(reg.summary$which[41,])
Por.forw<-regsubsets(G3~., nbest=1, nvmax=41,
force.in=NULL, force.out=NULL, intercept=TRUE,
method=c("forward"), data = Por.train)
summary(Por.forw)
summary(Math.forw)
summary(Por.forw)
Por.forw<-regsubsets(G3~., nbest=1, nvmax=42,
force.in=NULL, force.out=NULL, intercept=TRUE,
method=c("forward"), data = Por.train)
summary(Por.forw)
reg.summary$which
24+16
matrix_var <- matrix(0, nrow = 1, ncol = 40)
colnames(matrix_var) <- names(reg.summary$which[40,])
matrix_var <- matrix(0, nrow = 1, ncol = 42)
colnames(matrix_var) <- names(reg.summary$which[40,])
names(reg.summary$which[40,])
sample = sample.split(Por,SplitRatio = 0.80)
Por.train = subset(Por,sample == TRUE)
Por.forw<-regsubsets(G3~., nbest=1, nvmax=42,
force.in=NULL, force.out=NULL, intercept=TRUE,
method=c("forward"), data = Por.train)
reg.summary = summary(Por.forw)
colnames(matrix_var) <- names(reg.summary$which[40,])
names(reg.summary$which[40,])
matrix_var <- matrix(0, nrow = 1, ncol = 41)
colnames(matrix_var) <- names(reg.summary$which[40,])
"(Intercept)","schoolMS","sexM","age","addressU","famsizeLE3", "PstatusT","Medu","Fedu" ,            "Mjobhealth"       ,"Mjobother"        ,"Mjobservices"
#matrix_var <- matrix(0, nrow = 1, ncol = 41)
#colnames(matrix_var) <- names(reg.summary$which[40,])
matrix_var <- rep(0L, 41)
variables_nombres <- c("(Intercept)","schoolMS","sexM","age","addressU","famsizeLE3",
"PstatusT","Medu","Fedu",
"Mjobhealth","Mjobother","Mjobservices","Mjobteacher","Fjobhealth",
"Fjobother","Fjobservices",
"Fjobteacher","reasonhome","reasonother","reasonreputation"
,"guardianmother","guardianother",
"traveltime","studytime","failures","schoolsupyes","famsupyes","activitiesyes","nurseryyes",
"higheryes","internetyes",
"romanticyes","famrel","freetime","goout","Dalc","Walc","health","absences","G1","G2")
for (k in 1:650) {
set.seed(k)
sample = sample.split(Por,SplitRatio = 0.80)
Por.train = subset(Por,sample == TRUE)
Por.forw<-regsubsets(G3~., nbest=1, nvmax=41,
force.in=NULL, force.out=NULL, intercept=TRUE,
method=c("forward"), data = Por.train)
reg.summary = summary(Por.forw)
cp_min = which.min(reg.summary$cp)
n_aux <- c()
n_aux <- names(which(reg.summary$which[cp_min,]))
for (i in 1:length(n_aux)) {
aux <- n_aux[i]
for (j in 1:41) {
#if(aux == colnames(matrix_var)[j])
if(aux == variables_nombres[j])
matrix_var[j] = matrix_var[j] + 1
}
}
}
print(g1 + mynamestheme + labs( title= "Matematica - Forward", y="Frecuencia",
x = "Variables"))
#matrix_var <- matrix(0, nrow = 1, ncol = 41)
#colnames(matrix_var) <- names(reg.summary$which[40,])
matrix_var <- rep(0L, 41)
#matrix_var <- matrix(0, nrow = 1, ncol = 41)
#colnames(matrix_var) <- names(reg.summary$which[40,])
matrix_var <- rep(0L, 41)
variables_nombres <- c("(Intercept)","schoolMS","sexM","age","addressU","famsizeLE3",
"PstatusT","Medu","Fedu",
"Mjobhealth","Mjobother","Mjobservices","Mjobteacher","Fjobhealth",
"Fjobother","Fjobservices",
"Fjobteacher","reasonhome","reasonother","reasonreputation"
,"guardianmother","guardianother",
"traveltime","studytime","failures","schoolsupyes","famsupyes","activitiesyes","nurseryyes",
"higheryes","internetyes",
"romanticyes","famrel","freetime","goout","Dalc","Walc","health","absences","G1","G2")
for (k in 1:650) {
set.seed(k)
sample = sample.split(Por,SplitRatio = 0.80)
Por.train = subset(Por,sample == TRUE)
Por.forw<-regsubsets(G3~., nbest=1, nvmax=41,
force.in=NULL, force.out=NULL, intercept=TRUE,
method=c("forward"), data = Por.train)
reg.summary = summary(Por.forw)
cp_min = which.min(reg.summary$cp)
n_aux <- c()
n_aux <- names(which(reg.summary$which[cp_min,]))
for (i in 1:length(n_aux)) {
aux <- n_aux[i]
for (j in 1:41) {
#if(aux == colnames(matrix_var)[j])
if(aux == variables_nombres[j])
matrix_var[j] = matrix_var[j] + 1
}
}
}
#Obtengo aquello que tengan mayor relevancia de acuerdo con un umbral
umbral <- max(matrix_var)*0.40
df <- data.frame(Variables = variables_nombres[matrix_var>umbral],
Frecuencia = matrix_var[matrix_var>umbral])
# Plot
g2 <- ggplot(data = df, mapping = aes(x = Variables, y = Frecuencia, fill = Variables)) +
geom_bar(stat = "identity")+
geom_text(aes(label = Frecuencia), position = position_stack(vjust= 0.5),
colour = "black", size = 3)+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme_minimal()
print(g2 + mynamestheme + labs( title= "Portugues - Forward", y="Frecuencia",
x = "Variables"))
colourCount = length(matrix_var[matrix_var>umbral])
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
library(RColorBrewer)
colourCount = length(matrix_var[matrix_var>umbral])
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
colourCount = length(matrix_var[matrix_var>umbral])
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
# Plot
g1 <- ggplot(data = df, mapping = aes(x = Variables, y = Frecuencia, fill = Variables)) +
geom_bar(stat = "identity")+
geom_text(aes(label = Frecuencia), position = position_stack(vjust= 0.5),
colour = "black", size = 3)+
scale_fill_manual(values = getPalette(colourCount))+
theme_light()+
theme_minimal()
print(g1 + mynamestheme + labs( title= "Matematica - Forward", y="Frecuencia",
x = "Variables"))
df <- data.frame(Variables = variables_nombres[matrix_var>umbral],
Frecuencia = matrix_var[matrix_var>umbral])
colourCount = length(matrix_var[matrix_var>umbral])
getPalette = colorRampPalette(brewer.pal(9, "Set1"))
# Plot
g2 <- ggplot(data = df, mapping = aes(x = Variables, y = Frecuencia, fill = Variables)) +
geom_bar(stat = "identity")+
geom_text(aes(label = Frecuencia), position = position_stack(vjust= 0.5),
colour = "black", size = 3)+
scale_fill_brewer(palette = "Set1")+
theme_light()+
theme_minimal()
print(g2 + mynamestheme + labs( title= "Portugues - Forward", y="Frecuencia",
x = "Variables"))
# Plot
g2 <- ggplot(data = df, mapping = aes(x = Variables, y = Frecuencia, fill = Variables)) +
geom_bar(stat = "identity")+
geom_text(aes(label = Frecuencia), position = position_stack(vjust= 0.5),
colour = "black", size = 3)+
scale_fill_manual(values = getPalette(colourCount))+
theme_light()+
theme_minimal()
print(g2 + mynamestheme + labs( title= "Portugues - Forward", y="Frecuencia",
x = "Variables"))
mynamestheme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (15)),
legend.title = element_text(colour = "gray28",  face = "bold.italic", family = "Helvetica"),
legend.text = element_text(face = "italic", colour="gray28",family = "Helvetica"),
axis.title = element_text(family = "Helvetica", size = (11), colour = "steelblue4"),
axis.text = element_text(family = "Courier", colour = "cornflowerblue", size = (11)),
plot.tag = element_text(family = "Helvetica", face = "bold", size = (11)),
axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1),
#legend.position = c(.95, .95),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
#legend.margin = margin(6, 6, 6, 6)
)
print(g2 + mynamestheme + labs( title= "Portugues - Forward", y="Frecuencia",
x = "Variables"))
# Plot
g2 <- ggplot(data = df, mapping = aes(x = Variables, y = Frecuencia, fill = Variables)) +
geom_bar(stat = "identity")+
geom_text(aes(label = Frecuencia), position = position_stack(vjust= 0.5),
colour = "black", size = 3)+
scale_fill_manual(values = getPalette(colourCount))+
theme(axis. title. x = element_blank())
# Plot
g2 <- ggplot(data = df, mapping = aes(x = Variables, y = Frecuencia, fill = Variables)) +
geom_bar(stat = "identity")+
geom_text(aes(label = Frecuencia), position = position_stack(vjust= 0.5),
colour = "black", size = 3)+
scale_fill_manual(values = getPalette(colourCount))+
theme(axis.title.x = element_blank())+
theme_light()+
theme_minimal()
print(g2 + mynamestheme + labs( title= "Portugues - Forward", y="Frecuencia",
x = "Variables"))
# Plot
g2 <- ggplot(data = df, mapping = aes(x = Variables, y = Frecuencia, fill = Variables)) +
geom_bar(stat = "identity")+
geom_text(aes(label = Frecuencia), position = position_stack(vjust= 0.5),
colour = "black", size = 3)+
scale_fill_manual(values = getPalette(colourCount))+
theme(axis.title.x = element_blank())+
theme_light()+
theme_minimal()
print(g2 + labs( title= "Portugues - Forward", y="Frecuencia",
x = "Variables"))
# Plot
g2 <- ggplot(data = df, mapping = aes(x = Variables, y = Frecuencia, fill = Variables)) +
geom_bar(stat = "identity")+
geom_text(aes(label = Frecuencia), position = position_stack(vjust= 0.5),
colour = "black", size = 3)+
scale_fill_manual(values = getPalette(colourCount))+
theme(axis.text.x=element_blank())+
theme_light()+
theme_minimal()
print(g2 + mynamestheme + labs( title= "Portugues - Forward", y="Frecuencia",
x = "Variables"))
mynamestheme <- theme(plot.title = element_text(family = "Helvetica", face = "bold", size = (15)),
legend.title = element_text(colour = "gray28",  face = "bold.italic", family = "Helvetica"),
legend.text = element_text(face = "italic", colour="gray28",family = "Helvetica"),
axis.title = element_text(family = "Helvetica", size = (11), colour = "steelblue4"),
axis.text = element_text(family = "Courier", colour = "cornflowerblue", size = (11)),
plot.tag = element_text(family = "Helvetica", face = "bold", size = (11)),
axis.text.x=element_blank(),
#axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
#legend.position = c(.95, .95),
#legend.justification = c("right", "top"),
#legend.box.just = "right",
#legend.margin = margin(6, 6, 6, 6)
)
print(g1 + mynamestheme + labs( title= "Matematica - Forward", y="Frecuencia",
x = "Variables"))
print(g2 + mynamestheme + labs( title= "Portugues - Forward", y="Frecuencia",
x = "Variables"))
